//@version=4
//@SoftKill21
strategy(title="CRYPTO HA Strategy", shorttitle="CRYPTO HA Strategy", overlay=true , default_qty_type =strategy.percent_of_equity, default_qty_value =100, commission_type= strategy.commission.percent,commission_value =0.1 )


ma1_len = input(50)
ma2_len = input(100)

fromDay = input(defval = 1, title = "From Day", minval = 1, maxval = 31)
fromMonth = input(defval = 1, title = "From Month", minval = 1, maxval = 12)
fromYear = input(defval = 2020, title = "From Year", minval = 1970)
 //monday and session 
// To Date Inputs
toDay = input(defval = 31, title = "To Day", minval = 1, maxval = 31)
toMonth = input(defval = 12, title = "To Month", minval = 1, maxval = 12)
toYear = input(defval = 2020, title = "To Year", minval = 1970)

startDate = timestamp(fromYear, fromMonth, fromDay, 00, 00)
finishDate = timestamp(toYear, toMonth, toDay, 00, 00)
time_cond = time >= startDate and time <= finishDate 


//First Moving Average data
o = ema(open, ma1_len)
c = ema(close, ma1_len)
h = ema(high, ma1_len)
l = ema(low, ma1_len)

// === HA calculator ===
ha_t = heikinashi(syminfo.tickerid)
ha_o = security(ha_t, timeframe.period, o)
ha_c = security(ha_t, timeframe.period, c)
ha_h = security(ha_t, timeframe.period, h)
ha_l = security(ha_t, timeframe.period, l)

//Second Moving Average data

o2 = ema(ha_o, ma2_len)
c2 = ema(ha_c, ma2_len)
h2 = ema(ha_h, ma2_len)
l2 = ema(ha_l, ma2_len)

// === Color def ===
ha_col = o2 > c2 ? color.white : color.lime

sell = o2 > c2 and o2[1] < c2[1] and time_cond
buy = o2 < c2 and o2[1] > c2[1] and time_cond
plotshape(buy, color=color.green, text= "Buy", location= location.belowbar,style= shape.labelup, textcolor=color.white, size = size.tiny, title="Buy Alert",editable=false, transp=60)
plotshape(sell, color=color.red, text= "Sell", location= location.abovebar,style= shape.labeldown, textcolor=color.white, size = size.tiny, title="Sell Alert", editable=false, transp=60)

trendColor = buy ? color.red : sell ? color.green : na
plot( buy ? close: sell  ? close : na , color=trendColor, style=plot.style_line, linewidth=4, editable=false)



onlylong=input(true)
original=input(false)

if(onlylong)
    strategy.entry("long",1,when=buy)
    strategy.close("long",when=sell)
if(original)
    strategy.entry("long",1,when=buy)
    strategy.entry("short",0,when=sell)

sl = input(0.075)
strategy.exit("closelong", "long" , loss = close * sl / syminfo.mintick, alert_message = "sl point")
strategy.exit("closeshort", "short" , loss = close * sl / syminfo.mintick, alert_message = "sl point")


---------------------------------------

//@version=4
strategy("BarUpDn Strategy", overlay=true, default_qty_type = strategy.percent_of_equity, default_qty_value = 10, precision = 6)
// Issue long/short on bar up/dn and gap conditions.
enterLong  = close > open and open > close[1]
enterShort = close < open and open < close[1]
if enterLong
    // On the close of the bar, place order for long entry and 
    strategy.entry("Long executed", strategy.long)
    alert("Long order placed")
if enterShort
    strategy.entry("Short executed", strategy.short)
    alert("Short order placed")

changeInProfits = change(strategy.netprofit)
lastPercentProfit = changeInProfits ? 100 * (changeInProfits / strategy.position_size[1]) / strategy.position_avg_price[1] : na
plotchar(lastPercentProfit, "lastPercentProfit", "", location.top, size = size.tiny)

// For validation
plotchar(strategy.netprofit, "strategy.netprofit", "", location.top, size = size.tiny)
plotchar(strategy.position_size, "strategy.position_size", "", location.top, size = size.tiny)
plotchar(strategy.position_avg_price, "strategy.position_avg_price", "", location.top, size = size.tiny)

---------------------------------------
//@version=3
strategy(title='Super Simple Martingale Crossover', shorttitle="MartiMcFly",overlay=true, slippage=5, commission_type=strategy.commission.cash_per_contract, commission_value=0.00007, initial_capital=1000, currency=currency.USD)
src = close
//Moving average definition (for crossover)
fastEMA = ema(src, input(title="Fast EMA Period", defval=8))
slowEMA = ema(src, input(title="Slow EMA Period", defval=62))
//Take Profit and Stop Loss settings in points
TP = input(defval=1000, step=10, title='Take Profit (points)')
SL = input(defval=500, step=10, title='Stop Loss (points')
win_mult = input(defval=1.00, type=float, step=0.05, title='Multiplier for Winning Streak')
loss_mult = input(defval=1.7, type=float, step=0.05, title='Multiplier for Losing Streak')
//Just hedge the last trade lmao
dir = 0.0
dir := na(dir[1]) ? 1 : crossunder(fastEMA, slowEMA) and dir[1] > 0 ? -1 : crossover(fastEMA, slowEMA) and dir[1] < 0 ? 1 : dir[1]
//Count the current streak of winning/losing trades
calcWinMult(mult) => 
    result = 0.0
    result := na(result[1]) ? 1 : change(strategy.losstrades) > 0 ? 1 : change(strategy.wintrades) > 0 or change(strategy.eventrades) > 0 ? nz(result[1]) * mult : nz(result[1])
calcLossMult(mult) => 
    result = 0.0
    result := na(result[1]) ? 1 : change(strategy.wintrades) > 0 ? 1 : change(strategy.losstrades) > 0 or change(strategy.eventrades) > 0 ? nz(result[1]) * mult : nz(result[1])
//Gett the type of trade we need
type = 0.0
type := change(strategy.wintrades) > 0 ? 1 : change(strategy.losstrades) > 0 ? -1 : nz(type[1], 1)
//Get the martingale multiplier for the nex trade
qtyMult = type > 0 ? calcWinMult(win_mult) : calcLossMult(loss_mult)
//Basic buy/sell signals
buy = dir > 0 and strategy.opentrades < 1
sell = dir < 0 and strategy.opentrades < 1
//EMA plots
plot(fastEMA, color=red, linewidth=2)
plot(slowEMA, color=orange, linewidth=2)
lots = input(defval=0.01, title='Min Lot Size')*100000
adjustedLots = lots * qtyMult
if(strategy.equity > strategy.initial_capital * 0.2 and (strategy.closedtrades + strategy.opentrades) < 1499)
    strategy.entry('LONG', strategy.long, qty=adjustedLots, when=buy)
    strategy.entry('SHORT', strategy.short, qty=adjustedLots, when=sell)
    strategy.exit('L.exit', from_entry='LONG', profit=TP, loss=SL)
    strategy.exit('S.exit', from_entry='SHORT', profit=TP, loss=SL)

======================================


// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© narcis7599441

//@version=4
//ramine...
strategy("PlusPlus",overlay=true)

ema21=ema(close,21)
ema50=ema(close,50)
ema200=ema(close,200)

emaplot = input (true, title="Show EMA on chart")
date2 = input(title="From date", type=input.time, defval=timestamp("2021-01-01T00:00+03:00"))

useEMATrigger = input(false,title="Use EMA cross as trigger ?")
mf    = input(2.,"Martingale Multiplier")
len = input(8, minval=1, title="ema Length")
canti=input(1,title="Initial Quantity",minval=0.01)
cantplus=input(1,title="Plus Quantity",minval=0.01)
target_perc = input(1, title='Target Profit to Scale In (%)',minval=0.01)/100
take_profit = input(1, title='Target Take Profit', minval=0.01)
target_qty  = input(200, title='% Of Current Holdings to Buy', minval=0)/100 
StopLossPercentage=input(2,title="Stop Loss Percent", minval=0.01, step=0.5)
src = close
out = ema(src, len)
up = (out > ema21) 
down = out < ema21
crossup = crossover(out,ema21)
crossdown = crossunder(out,ema21)
mycolor = up ? #00ffaa : #ffc1cc
plot(out and emaplot ? out :na, title="EMA", color=mycolor, linewidth=3)
plot(ema21 and emaplot ? ema21 :na, title="EMA21", color=color.black, linewidth=3)



longcondition=(out > out[1]) and (out[1]<out[2])  
shortcondition= (out < out[1]) and (out[1]>out[2])  
golong= useEMATrigger ? crossup : longcondition
goshort=useEMATrigger ? crossdown : shortcondition
closelong=(out < out[1]) and (out[1]>out[2])  //and not long[2]
closeshort=(out > out[1]) and (out[1]<out[2])  //and not long[2]

//plot(ema20,title="20",color=#00ffaa,linewidth=2)
//plot(ema50,title="50",color=#ffc1cc,linewidth=2)


PlusTradePercentage=input(1, minval=0.5, title="Position Add Profit Percentage")

LossTarget=(close*(StopLossPercentage/100))/syminfo.mintick
ProfitTarget=(close*(take_profit/100))/syminfo.mintick
PlusTarget=(close*(PlusTradePercentage/100)*canti)
addToLong = (strategy.position_size > 0) and (strategy.position_size < 3) and (strategy.openprofit > 1200)
pnl=(close>strategy.position_avg_price) ? ((close - strategy.position_avg_price) / strategy.position_avg_price) : ((strategy.position_avg_price-close) / strategy.position_avg_price)

//plot(close*(1+target_perc),color=#00ffaa,offset=0,linewidth=2)
//plot(close*(1-target_perc),color=#ffc1cc,offset=0,linewidth=2)

size = 0.
loss = change(strategy.losstrades)
win = change(strategy.wintrades)
size := loss ? size[1]*mf : win ? canti : nz(size[1],canti)
    
if time >= date2
    if (golong)
        strategy.entry("Long",strategy.long,size, stop=ema21*(1+target_perc))
    if (goshort)
        strategy.entry("Short",strategy.short,size, stop=ema21*(1-target_perc))        
    //strategy.entry("Short",strategy.short,canti,when=strategy.opentrades == 0 and shortcondition )
    //strategy.entry("LongPlus",strategy.long,cantplus,when=strategy.position_size == 1 and (pnl>=target_perc) and longcondition)
    //strategy.entry("ShortPlus",strategy.short,cantplus,when= strategy.position_size == -1 and (pnl>=target_perc) and shortcondition)


   
//strategy.close("Long",when=closelong)
//strategy.close("Short",when=closeshort)
strategy.exit("StopLong","Long",loss=LossTarget, profit=ProfitTarget)    
strategy.exit("StopShort","Short",loss=LossTarget,profit=ProfitTarget)    

changeInProfits = change(strategy.netprofit)
lastPercentProfit = changeInProfits ? 100 * (changeInProfits / strategy.position_size[1]) / strategy.position_avg_price[1] : na
lastPL=100 * (changeInProfits / strategy.position_size[1]) / strategy.position_avg_price[1]
plotchar(lastPercentProfit, "lastPercentProfit", "", location.top, size = size.tiny)
plotchar(lastPL, "Last P/L %", "", location.top, size = size.tiny)

// For validation
plotchar(strategy.losstrades, "Loss Trades", "", location.top, size = size.tiny)
plotchar(strategy.wintrades, "Win Trades", "", location.top, size = size.tiny)
plotchar(strategy.netprofit, "strategy.netprofit", "", location.top, size = size.tiny)
plotchar(strategy.position_size, "strategy.position_size", "", location.top, size = size.tiny)
plotchar(size, "Actual size", "", location.top, size = size.tiny)


var table t = table.new(position.top_right,2,2)

//if (barstate.islast)
table.cell(t,0,0,"P/L",width=5)
table.cell(t,1,0,"--",width=5)

table.cell(t,0,1,"$Add",width=5)
table.cell(t,1,1,"--",width=5)
    
==============================================================================    

//MULTI TIME FRAME EMA
//author Jurij 2015
//default moving average period is 4H because '4h' is missing in the resolution drop down list
study("Multi Time Frame Exponential Moving Average", "MTF EMA", overlay=true)
ma_len = input(title="Length", type=integer, defval=100)
src = input(title="Source", type=source, defval=close)
ma_offset = input(title="Offset", type=integer, defval=0)
res = input(title="Resolution", type=resolution, defval="240")
htf_ma = ema(src, ma_len)
out = security(tickerid, res, htf_ma)
plot(out, color=red, offset=ma_offset)

=======================================================================
